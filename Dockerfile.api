FROM mcr.microsoft.com/dotnet/aspnet:7.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

# Install curl for healthcheck and wait-for-it script
RUN apt-get update && apt-get install -y curl netcat-openbsd && rm -rf /var/lib/apt/lists/*

FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build
WORKDIR /src

# Copy project files first for better layer caching
COPY src/NeoServiceLayer.Api/NeoServiceLayer.Api.csproj NeoServiceLayer.Api/
COPY src/NeoServiceLayer.Core/NeoServiceLayer.Core.csproj NeoServiceLayer.Core/
COPY src/NeoServiceLayer.Common/NeoServiceLayer.Common.csproj NeoServiceLayer.Common/
COPY src/NeoServiceLayer.Services/NeoServiceLayer.Services.csproj NeoServiceLayer.Services/
COPY src/NeoServiceLayer.Enclave/NeoServiceLayer.Enclave.csproj NeoServiceLayer.Enclave/

# Restore packages
RUN dotnet restore "NeoServiceLayer.Api/NeoServiceLayer.Api.csproj"

# Copy the rest of the source code
COPY src/ ./

# Build the project
WORKDIR "/src/NeoServiceLayer.Api"
RUN dotnet build "NeoServiceLayer.Api.csproj" -c Release -o /app/build

# Publish the application
FROM build AS publish
WORKDIR "/src/NeoServiceLayer.Api"
RUN dotnet publish "NeoServiceLayer.Api.csproj" -c Release -o /app/publish

# Create the final image
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

# Create a directory for storage
RUN mkdir -p /app/Storage /app/Database /app/Backups

# Create a startup script that waits for MongoDB to be ready
RUN echo '#!/bin/bash\n\
echo "Waiting for MongoDB to be ready..."\n\
until nc -z mongodb 27017; do\n\
  echo "MongoDB is unavailable - sleeping"\n\
  sleep 1\n\
done\n\
\n\
echo "MongoDB is up - starting Neo Service Layer API"\n\
\n\
# Set environment variables\n\
export ASPNETCORE_ENVIRONMENT=Development\n\
export DOTNET_ENVIRONMENT=Development\n\
export ConnectionStrings__MongoDB="mongodb://mongodb:27017/?directConnection=true&serverSelectionTimeoutMS=5000"\n\
export Database__Providers__2__Options__ConnectionString="mongodb://mongodb:27017/?directConnection=true&serverSelectionTimeoutMS=5000"\n\
\n\
echo "Starting Neo Service Layer API..."\n\
exec dotnet NeoServiceLayer.Api.dll $@\n\
' > /app/entrypoint.sh && chmod +x /app/entrypoint.sh

# Set the environment variables
ENV ASPNETCORE_ENVIRONMENT=Development
ENV DOTNET_ENVIRONMENT=Development
ENV ConnectionStrings__MongoDB="mongodb://mongodb:27017/?directConnection=true&serverSelectionTimeoutMS=5000"
ENV Database__Providers__2__Options__ConnectionString="mongodb://mongodb:27017/?directConnection=true&serverSelectionTimeoutMS=5000"

# Set the entry point
ENTRYPOINT ["/app/entrypoint.sh"]
