# Metrics Service Configuration

# Collection Configuration
collection:
  interval: 10s
  batch_size: 1000
  buffer_size: 10000
  services:
    - name: "api"
      enabled: true
      metrics:
        - "request_duration"
        - "request_count"
        - "error_count"
        - "active_connections"
    - name: "functions"
      enabled: true
      metrics:
        - "execution_duration"
        - "execution_count"
        - "error_count"
        - "memory_usage"
    - name: "gasbank"
      enabled: true
      metrics:
        - "gas_balance"
        - "gas_usage"
        - "refill_count"
        - "transaction_count"
    - name: "pricefeed"
      enabled: true
      metrics:
        - "price_updates"
        - "source_latency"
        - "source_errors"
        - "deviation"
    - name: "trigger"
      enabled: true
      metrics:
        - "trigger_executions"
        - "trigger_failures"
        - "trigger_latency"
        - "active_triggers"
    - name: "secrets"
      enabled: true
      metrics:
        - "secret_operations"
        - "rotation_count"
        - "access_denied"
        - "encryption_duration"

# Storage Configuration
storage:
  type: "prometheus"
  retention:
    time: 15d
    size: "50GB"
  compression:
    enabled: true
    algorithm: "snappy"
  backup:
    enabled: true
    interval: 24h
    retention: 7d

# Exporters Configuration
exporters:
  prometheus:
    enabled: true
    port: 9090
    path: "/metrics"
    retention: 15d
  grafana:
    enabled: true
    url: ${GRAFANA_URL}
    api_key: ${GRAFANA_API_KEY}
    org_id: 1
    dashboard_folder: "Neo Service Layer"
  alertmanager:
    enabled: true
    url: ${ALERTMANAGER_URL}
    receivers:
      - name: "email"
        email_configs:
          - to: "alerts@neo-service-layer.io"
      - name: "slack"
        slack_configs:
          - channel: "#alerts"
            api_url: ${SLACK_WEBHOOK_URL}

# Dashboard Configuration
dashboards:
  auto_generate: true
  refresh_interval: 1m
  panels:
    - name: "System Overview"
      type: "graph"
      metrics:
        - "cpu_usage"
        - "memory_usage"
        - "disk_usage"
    - name: "Service Health"
      type: "status"
      metrics:
        - "service_up"
        - "error_rate"
    - name: "Performance"
      type: "graph"
      metrics:
        - "request_duration"
        - "throughput"

# Alert Rules
alerts:
  rules:
    - name: "HighErrorRate"
      expr: "error_rate > 0.05"
      for: "5m"
      labels:
        severity: "critical"
      annotations:
        description: "Error rate above 5% for 5 minutes"
    - name: "ServiceDown"
      expr: "service_up == 0"
      for: "1m"
      labels:
        severity: "critical"
      annotations:
        description: "Service is down"
    - name: "HighLatency"
      expr: "request_duration_seconds > 1"
      for: "5m"
      labels:
        severity: "warning"
      annotations:
        description: "High latency detected"

# Security
security:
  authentication:
    enabled: true
    methods:
      - "basic"
      - "token"
  authorization:
    enabled: true
    roles:
      - name: "admin"
        permissions: ["read", "write"]
      - name: "viewer"
        permissions: ["read"]

# Development
development:
  mock_metrics: false
  debug_logging: false
